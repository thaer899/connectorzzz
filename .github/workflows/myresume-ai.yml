name: myresume-ai
run-name: myresume-ai${{ (github.event_name == 'workflow_dispatch') && github.event.inputs.app || '' }}${{ (github.event_name == 'push') && '-auto' || '' }}-${{github.event.inputs.job}}${{ (github.event.inputs.common == 'true') && '-common' || '' }}:${{ github.run_number }}

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      app:
        type: choice
        description: 'Application'
        required: true
        options:
          - myresume-express
          - myresume-ai
      job:
        type: choice
        description: 'Job'
        required: true
        options:
          - deploy
          - build
      common:
        type: boolean
        description: 'Common'
        required: true
        default: false

jobs:

  build:
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'build' ) || ( github.event_name == 'push' )
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: eu.gcr.io/thaersaidi-da79c/myresume-express:${{ github.run_number }}
      WORKLOAD_IDENTITY_PROVIDER: 'projects/250500941343/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc'
      SERVICE_ACCOUNT_EMAIL: 'thaersaidi-sa@thaersaidi-da79c.iam.gserviceaccount.com'

    permissions:
      contents: 'read'
      id-token: 'write'      

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}
      -
        name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: eu.gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./myresume-express
          push: true
          tags: ${{ env.IMAGE_TAG }}

  deploy:
    if: (always() && github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'deploy' ) || ( github.event_name == 'push' )
    needs: build
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: myresume-ai
      PROJECT_ID: thaersaidi-da79c
      APP_NAME: ${{ github.event.inputs.app }}
      IMAGE_REGISTRY: eu.gcr.io
      IMAGE_TAG: eu.gcr.io/thaersaidi-da79c/myresume-express:latest
      APP_CHART_PATH: ./utils/helm/myresume-ai/apps/${{ github.event.inputs.app }}
      COMMON_CHART_PATH: ./utils/helm/myresume-ai/common
      CLUSTER_REGION: europe-west1
      SERVICE_ACCOUNT: 'thaersaidi-sa'
      WORKLOAD_IDENTITY_PROVIDER: 'projects/250500941343/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc'
      SERVICE_ACCOUNT_EMAIL: 'thaersaidi-sa@thaersaidi-da79c.iam.gserviceaccount.com'

    permissions:
      contents: 'read'
      id-token: 'write'      

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Auth to Google Cloud SDK'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: access_token
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
          
      - name: Install GKE Auth plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate to the cluster
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.CLUSTER_REGION }} --project ${{ env.PROJECT_ID }} || gcloud feedback --verbosity=debug
    
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.5.2'

      - name: Deploy Common Chart to Kubernetes
        if: event_name == 'workflow_dispatch'
        run: |
          helm upgrade --install ${{ env.CLUSTER_NAME }}-common ${{ env.COMMON_CHART_PATH }}

      - name: Deploy to Kubernetes
        if: github.event.inputs.common == 'true'
        run: |
          helm upgrade --install ${{ env.APP_NAME }} ${{ env.APP_CHART_PATH }} --set image.tag=${{ env.IMAGE_TAG }}
name: myresume-ai-automate
run-name: ${{ (github.event_name == 'push') && 'auto' || '' }}${{ github.event.inputs.app }}${{ (github.event_name == 'workflow_dispatch') && '-' || '' }}${{github.event.inputs.job}}${{ (github.event.inputs.common == 'true') && '-with-common' || '' }}-${{ github.run_number }}

on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:
    inputs:
      app:
        type: choice
        description: 'Application'
        required: true
        options:
          - myresume-express
          - myresume-x
      job:
        type: choice
        description: 'Job'
        required: true
        options:
          - deploy
          - test
          - build
      common:
        type: boolean
        description: 'Common'
        required: true
        default: false

jobs:

  build:
    if: (github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'build' ) || ( github.event_name == 'push' )
    environment: myresume-ai
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ (github.event_name == 'push') && 'myresume-express' || '' }}${{ github.event.inputs.app }}
    permissions:
      contents: 'read'
      id-token: 'write'      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_EMAIL }}

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: eu.gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ env.APP_NAME }}
          push: true
          tags: ${{ vars.IMAGE_REGISTRY }}/${{ vars.PROJECT_ID }}/${{ env.APP_NAME }}:latest

  deploy:
    if: (always() && github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'deploy' ) || ( github.event_name == 'push' )
    needs: build
    environment: myresume-ai
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ (github.event_name == 'push') && 'myresume-express' || '' }}${{ github.event.inputs.app }}
      APP_CHART_PATH: ./myresume-ai/scripts/helm/apps/${{ (github.event_name == 'push') && 'myresume-express' || '' }}${{ github.event.inputs.app }}
      COMMON_CHART_PATH: ./myresume-ai/scripts/helm/common
      
    permissions:
      contents: 'read'
      id-token: 'write'      

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 'Auth to Google Cloud SDK'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: access_token
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.PROJECT_ID }}
          export_default_credentials: true
          
      - name: Install GKE Auth plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Authenticate to the cluster
        run: |
          gcloud container clusters get-credentials ${{ vars.CLUSTER_NAME }} --region ${{ vars.CLUSTER_REGION }} --project ${{ vars.PROJECT_ID }} || gcloud feedback --verbosity=debug
    
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.5.2'

      - name: Deploy Common Chart to Kubernetes
        if: ( github.event_name == 'workflow_dispatch' || github.event.inputs.common == 'true' )
        run: |
          helm upgrade --install ${{ vars.CLUSTER_NAME }}-common ${{ env.COMMON_CHART_PATH }}

      - name: Deploy to Kubernetes
        run: |
          helm upgrade --install ${{ env.APP_NAME }} ${{ env.APP_CHART_PATH }} --set image.tag=${{ vars.IMAGE_REGISTRY }}/${{ vars.PROJECT_ID }}/${{ github.event.inputs.app }}:latest

  test:
    if: (always() && github.event_name == 'workflow_dispatch' && github.event.inputs.job == 'test' ) || ( github.event_name == 'push' )
    needs: build
    environment: myresume-ai
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ (github.event_name == 'push') && 'myresume-express' || '' }}${{ github.event.inputs.app }}    

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman Collection
        run: newman run ./${{ github.event.inputs.app }}/tests/colection.json --env-var url=${{ vars.HOST }} --env-var apiKey=${{ secrets.API_KEY }} --verbose

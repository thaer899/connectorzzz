name: myresume-express
run-name: myresume-express:${{ github.run_number }}

on:
  workflow_dispatch:
    inputs:
      job:
        type: choice
        description: 'Task to run'
        required: true
        options:
          - deploy

jobs:
  deploy:
    if: github.event.inputs.job == 'deploy'
    runs-on: ubuntu-latest
    env:
      CLUSTER_NAME: myresume-ai
      IMAGE_TAG: eu.gcr.io/thaersaidi-da79c/myresume-express:${{ github.run_number }}
      RELEASE_NAME: myresume-express
      CHART_PATH: ./utils/helm/myresume-ai/apps/myresume-express
      PROJECT_ID: thaersaidi-da79c
      CLUSTER_REGION: europe-west1
      ACCOUNT: thaersaidi-da79c@appspot.gserviceaccount.com

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Log in to Google Container Registry
        uses: docker/login-action@v1 
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCP_THAERSAIDI_SA }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./myresume-express
          push: true
          tags: ${{ env.IMAGE_TAG }}

      - name: 'Auth to Google Cloud SDK'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/250500941343/locations/global/workloadIdentityPools/github-actions/subject/SUBJECT_ATTRIBUTE_VALUE'
          service_account: 'automation@thaersaidi-da79c.iam.gserviceaccount.com'
  
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id:  ${{ env.PROJECT_ID }}
          
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.5.2'

      - name: Deploy to Kubernetes
        run: |
          gcloud config set account ${{ env.ACCOUNT }} 
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.CLUSTER_REGION }} --project ${{ env.PROJECT_ID }}
          helm upgrade --install ${{ env.RELEASE_NAME }} ${{ env.CHART_PATH }} --set image.tag=${{ env.IMAGE_TAG }}
